From efe9c6a547e1e38bafeca762a6a33d4182077169 Mon Sep 17 00:00:00 2001
Message-Id: <efe9c6a547e1e38bafeca762a6a33d4182077169.1656336664.git.f3sch.git@outlook.com>
In-Reply-To: <586f14a1bdee669e8603c065049b462eabce8686.1656336664.git.f3sch.git@outlook.com>
References: <586f14a1bdee669e8603c065049b462eabce8686.1656336664.git.f3sch.git@outlook.com>
From: Felix Schlepper <f3sch.git@outlook.com>
Date: Sun, 26 Jun 2022 17:14:27 +0200
Subject: [PATCH 2/4] Added jiffies

Signed-off-by: Felix Schlepper <f3sch.git@outlook.com>
---
 task_08/hello.c | 42 ++++++++++++++++++++++++++++++++++++++----
 1 file changed, 38 insertions(+), 4 deletions(-)

diff --git a/task_08/hello.c b/task_08/hello.c
index 521c86a..feb9e84 100644
--- a/task_08/hello.c
+++ b/task_08/hello.c
@@ -8,6 +8,7 @@
 #include <linux/debugfs.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
+#include <linux/jiffies.h>
 
 MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Felix Schlepper");
@@ -15,9 +16,10 @@ MODULE_DESCRIPTION("Challenge 01 - Hello, world!");
 MODULE_VERSION("1.0");
 
 #define YOUR_ID_LEN 10
-const static char name_buf[YOUR_ID_LEN] =
+static char name_buf[YOUR_ID_LEN] =
 	"Eudyptula"; // I don't have an id, just using this
 static struct dentry *dbgfs; // global parent
+static char jbuf[sizeof(jiffies)];
 
 static ssize_t eduyptula_write(struct file *file, const char __user *buf,
 			       size_t len, loff_t *ppos)
@@ -52,27 +54,59 @@ static ssize_t eduyptula_read(struct file *file, char __user *buf, size_t len,
 	return YOUR_ID_LEN;
 }
 
-static const struct file_operations fops = {
+static const struct file_operations efops = {
 	.owner = THIS_MODULE,
 	.write = eduyptula_write,
 	.read = eduyptula_read,
 };
 
+static ssize_t jiffies_write(struct file *file, const char __user *buf,
+			     size_t len, loff_t *ppos)
+{
+	return 0;
+}
+
+static ssize_t jiffies_read(struct file *file, char __user *buf, size_t len,
+			    loff_t *ppos)
+{
+	sprintf(jbuf, "%lu", jiffies);
+	if (copy_to_user(buf, jbuf, sizeof(jiffies))) {
+		pr_debug("Jiffies: Read: Could not copy to user space!\n");
+		return -EFAULT;
+	}
+
+	return sizeof(jiffies);
+}
+
+static const struct file_operations jfops = {
+	.owner = THIS_MODULE,
+	.write = jiffies_write,
+	.read = jiffies_read,
+};
+
 static int __init start(void)
 {
-	struct dentry *id;
+	struct dentry *id, *jif;
 	dbgfs = debugfs_create_dir("eudyptula", NULL);
 	if (!dbgfs) {
 		pr_err("Could not create debugfs dir!\n");
 		return -ENODEV;
 	}
 
-	id = debugfs_create_file("id", S_IRWXU, dbgfs, (void *)name_buf, &fops);
+	id = debugfs_create_file("id", S_IRWXU, dbgfs, (void *)name_buf,
+				 &efops);
 	if (!id) {
 		pr_err("Could not create id file!\n");
 		goto err_id;
 	}
 
+	jif = debugfs_create_file("jiffies", S_IRUSR | S_IROTH, dbgfs,
+				  (void *)jbuf, &jfops);
+	if (!jif) {
+		pr_err("Could not create id file!\n");
+		goto err_id;
+	}
+
 	return 0;
 
 err_id:
-- 
2.36.1

